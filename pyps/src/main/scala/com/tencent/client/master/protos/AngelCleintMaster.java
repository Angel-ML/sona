// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_master.proto

package com.tencent.client.master.protos;

/**
 * Protobuf service {@code ClientMaster.AngelCleintMaster}
 */
public  abstract class AngelCleintMaster
    implements com.google.protobuf.Service {
  protected AngelCleintMaster() {}

  public interface Interface {
    /**
     * <code>rpc Register(.ClientMaster.RegisterReq) returns (.ClientMaster.RegisterResp);</code>
     */
    public abstract void register(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.RegisterReq request,
        com.google.protobuf.RpcCallback<com.tencent.client.master.protos.RegisterResp> done);

    /**
     * <code>rpc SetAngelLocation(.ClientMaster.SetAngelLocationReq) returns (.ClientMaster.SetAngelLocationResp);</code>
     */
    public abstract void setAngelLocation(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.SetAngelLocationReq request,
        com.google.protobuf.RpcCallback<com.tencent.client.master.protos.SetAngelLocationResp> done);

    /**
     * <code>rpc GetAngelLocation(.ClientMaster.GetAngelLocationReq) returns (.ClientMaster.GetAngelLocationResp);</code>
     */
    public abstract void getAngelLocation(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.GetAngelLocationReq request,
        com.google.protobuf.RpcCallback<com.tencent.client.master.protos.GetAngelLocationResp> done);

    /**
     * <code>rpc HeartBeat(.ClientMaster.HeartBeatReq) returns (.ClientMaster.HeartBeatResp);</code>
     */
    public abstract void heartBeat(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.HeartBeatReq request,
        com.google.protobuf.RpcCallback<com.tencent.client.master.protos.HeartBeatResp> done);

    /**
     * <code>rpc Sync(.ClientMaster.SyncReq) returns (.ClientMaster.SyncResp);</code>
     */
    public abstract void sync(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.SyncReq request,
        com.google.protobuf.RpcCallback<com.tencent.client.master.protos.SyncResp> done);

  }

  public static com.google.protobuf.Service newReflectiveService(
      final Interface impl) {
    return new AngelCleintMaster() {
      @java.lang.Override
      public  void register(
          com.google.protobuf.RpcController controller,
          com.tencent.client.master.protos.RegisterReq request,
          com.google.protobuf.RpcCallback<com.tencent.client.master.protos.RegisterResp> done) {
        impl.register(controller, request, done);
      }

      @java.lang.Override
      public  void setAngelLocation(
          com.google.protobuf.RpcController controller,
          com.tencent.client.master.protos.SetAngelLocationReq request,
          com.google.protobuf.RpcCallback<com.tencent.client.master.protos.SetAngelLocationResp> done) {
        impl.setAngelLocation(controller, request, done);
      }

      @java.lang.Override
      public  void getAngelLocation(
          com.google.protobuf.RpcController controller,
          com.tencent.client.master.protos.GetAngelLocationReq request,
          com.google.protobuf.RpcCallback<com.tencent.client.master.protos.GetAngelLocationResp> done) {
        impl.getAngelLocation(controller, request, done);
      }

      @java.lang.Override
      public  void heartBeat(
          com.google.protobuf.RpcController controller,
          com.tencent.client.master.protos.HeartBeatReq request,
          com.google.protobuf.RpcCallback<com.tencent.client.master.protos.HeartBeatResp> done) {
        impl.heartBeat(controller, request, done);
      }

      @java.lang.Override
      public  void sync(
          com.google.protobuf.RpcController controller,
          com.tencent.client.master.protos.SyncReq request,
          com.google.protobuf.RpcCallback<com.tencent.client.master.protos.SyncResp> done) {
        impl.sync(controller, request, done);
      }

    };
  }

  public static com.google.protobuf.BlockingService
      newReflectiveBlockingService(final BlockingInterface impl) {
    return new com.google.protobuf.BlockingService() {
      public final com.google.protobuf.Descriptors.ServiceDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }

      public final com.google.protobuf.Message callBlockingMethod(
          com.google.protobuf.Descriptors.MethodDescriptor method,
          com.google.protobuf.RpcController controller,
          com.google.protobuf.Message request)
          throws com.google.protobuf.ServiceException {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.callBlockingMethod() given method descriptor for " +
            "wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return impl.register(controller, (com.tencent.client.master.protos.RegisterReq)request);
          case 1:
            return impl.setAngelLocation(controller, (com.tencent.client.master.protos.SetAngelLocationReq)request);
          case 2:
            return impl.getAngelLocation(controller, (com.tencent.client.master.protos.GetAngelLocationReq)request);
          case 3:
            return impl.heartBeat(controller, (com.tencent.client.master.protos.HeartBeatReq)request);
          case 4:
            return impl.sync(controller, (com.tencent.client.master.protos.SyncReq)request);
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

      public final com.google.protobuf.Message
          getRequestPrototype(
          com.google.protobuf.Descriptors.MethodDescriptor method) {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.getRequestPrototype() given method " +
            "descriptor for wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return com.tencent.client.master.protos.RegisterReq.getDefaultInstance();
          case 1:
            return com.tencent.client.master.protos.SetAngelLocationReq.getDefaultInstance();
          case 2:
            return com.tencent.client.master.protos.GetAngelLocationReq.getDefaultInstance();
          case 3:
            return com.tencent.client.master.protos.HeartBeatReq.getDefaultInstance();
          case 4:
            return com.tencent.client.master.protos.SyncReq.getDefaultInstance();
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

      public final com.google.protobuf.Message
          getResponsePrototype(
          com.google.protobuf.Descriptors.MethodDescriptor method) {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.getResponsePrototype() given method " +
            "descriptor for wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return com.tencent.client.master.protos.RegisterResp.getDefaultInstance();
          case 1:
            return com.tencent.client.master.protos.SetAngelLocationResp.getDefaultInstance();
          case 2:
            return com.tencent.client.master.protos.GetAngelLocationResp.getDefaultInstance();
          case 3:
            return com.tencent.client.master.protos.HeartBeatResp.getDefaultInstance();
          case 4:
            return com.tencent.client.master.protos.SyncResp.getDefaultInstance();
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

    };
  }

  /**
   * <code>rpc Register(.ClientMaster.RegisterReq) returns (.ClientMaster.RegisterResp);</code>
   */
  public abstract void register(
      com.google.protobuf.RpcController controller,
      com.tencent.client.master.protos.RegisterReq request,
      com.google.protobuf.RpcCallback<com.tencent.client.master.protos.RegisterResp> done);

  /**
   * <code>rpc SetAngelLocation(.ClientMaster.SetAngelLocationReq) returns (.ClientMaster.SetAngelLocationResp);</code>
   */
  public abstract void setAngelLocation(
      com.google.protobuf.RpcController controller,
      com.tencent.client.master.protos.SetAngelLocationReq request,
      com.google.protobuf.RpcCallback<com.tencent.client.master.protos.SetAngelLocationResp> done);

  /**
   * <code>rpc GetAngelLocation(.ClientMaster.GetAngelLocationReq) returns (.ClientMaster.GetAngelLocationResp);</code>
   */
  public abstract void getAngelLocation(
      com.google.protobuf.RpcController controller,
      com.tencent.client.master.protos.GetAngelLocationReq request,
      com.google.protobuf.RpcCallback<com.tencent.client.master.protos.GetAngelLocationResp> done);

  /**
   * <code>rpc HeartBeat(.ClientMaster.HeartBeatReq) returns (.ClientMaster.HeartBeatResp);</code>
   */
  public abstract void heartBeat(
      com.google.protobuf.RpcController controller,
      com.tencent.client.master.protos.HeartBeatReq request,
      com.google.protobuf.RpcCallback<com.tencent.client.master.protos.HeartBeatResp> done);

  /**
   * <code>rpc Sync(.ClientMaster.SyncReq) returns (.ClientMaster.SyncResp);</code>
   */
  public abstract void sync(
      com.google.protobuf.RpcController controller,
      com.tencent.client.master.protos.SyncReq request,
      com.google.protobuf.RpcCallback<com.tencent.client.master.protos.SyncResp> done);

  public static final
      com.google.protobuf.Descriptors.ServiceDescriptor
      getDescriptor() {
    return com.tencent.client.master.protos.ClientMasterProto.getDescriptor().getServices().get(0);
  }
  public final com.google.protobuf.Descriptors.ServiceDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }

  public final void callMethod(
      com.google.protobuf.Descriptors.MethodDescriptor method,
      com.google.protobuf.RpcController controller,
      com.google.protobuf.Message request,
      com.google.protobuf.RpcCallback<
        com.google.protobuf.Message> done) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.callMethod() given method descriptor for wrong " +
        "service type.");
    }
    switch(method.getIndex()) {
      case 0:
        this.register(controller, (com.tencent.client.master.protos.RegisterReq)request,
          com.google.protobuf.RpcUtil.<com.tencent.client.master.protos.RegisterResp>specializeCallback(
            done));
        return;
      case 1:
        this.setAngelLocation(controller, (com.tencent.client.master.protos.SetAngelLocationReq)request,
          com.google.protobuf.RpcUtil.<com.tencent.client.master.protos.SetAngelLocationResp>specializeCallback(
            done));
        return;
      case 2:
        this.getAngelLocation(controller, (com.tencent.client.master.protos.GetAngelLocationReq)request,
          com.google.protobuf.RpcUtil.<com.tencent.client.master.protos.GetAngelLocationResp>specializeCallback(
            done));
        return;
      case 3:
        this.heartBeat(controller, (com.tencent.client.master.protos.HeartBeatReq)request,
          com.google.protobuf.RpcUtil.<com.tencent.client.master.protos.HeartBeatResp>specializeCallback(
            done));
        return;
      case 4:
        this.sync(controller, (com.tencent.client.master.protos.SyncReq)request,
          com.google.protobuf.RpcUtil.<com.tencent.client.master.protos.SyncResp>specializeCallback(
            done));
        return;
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public final com.google.protobuf.Message
      getRequestPrototype(
      com.google.protobuf.Descriptors.MethodDescriptor method) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.getRequestPrototype() given method " +
        "descriptor for wrong service type.");
    }
    switch(method.getIndex()) {
      case 0:
        return com.tencent.client.master.protos.RegisterReq.getDefaultInstance();
      case 1:
        return com.tencent.client.master.protos.SetAngelLocationReq.getDefaultInstance();
      case 2:
        return com.tencent.client.master.protos.GetAngelLocationReq.getDefaultInstance();
      case 3:
        return com.tencent.client.master.protos.HeartBeatReq.getDefaultInstance();
      case 4:
        return com.tencent.client.master.protos.SyncReq.getDefaultInstance();
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public final com.google.protobuf.Message
      getResponsePrototype(
      com.google.protobuf.Descriptors.MethodDescriptor method) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.getResponsePrototype() given method " +
        "descriptor for wrong service type.");
    }
    switch(method.getIndex()) {
      case 0:
        return com.tencent.client.master.protos.RegisterResp.getDefaultInstance();
      case 1:
        return com.tencent.client.master.protos.SetAngelLocationResp.getDefaultInstance();
      case 2:
        return com.tencent.client.master.protos.GetAngelLocationResp.getDefaultInstance();
      case 3:
        return com.tencent.client.master.protos.HeartBeatResp.getDefaultInstance();
      case 4:
        return com.tencent.client.master.protos.SyncResp.getDefaultInstance();
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public static Stub newStub(
      com.google.protobuf.RpcChannel channel) {
    return new Stub(channel);
  }

  public static final class Stub extends com.tencent.client.master.protos.AngelCleintMaster implements Interface {
    private Stub(com.google.protobuf.RpcChannel channel) {
      this.channel = channel;
    }

    private final com.google.protobuf.RpcChannel channel;

    public com.google.protobuf.RpcChannel getChannel() {
      return channel;
    }

    public  void register(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.RegisterReq request,
        com.google.protobuf.RpcCallback<com.tencent.client.master.protos.RegisterResp> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(0),
        controller,
        request,
        com.tencent.client.master.protos.RegisterResp.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.tencent.client.master.protos.RegisterResp.class,
          com.tencent.client.master.protos.RegisterResp.getDefaultInstance()));
    }

    public  void setAngelLocation(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.SetAngelLocationReq request,
        com.google.protobuf.RpcCallback<com.tencent.client.master.protos.SetAngelLocationResp> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(1),
        controller,
        request,
        com.tencent.client.master.protos.SetAngelLocationResp.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.tencent.client.master.protos.SetAngelLocationResp.class,
          com.tencent.client.master.protos.SetAngelLocationResp.getDefaultInstance()));
    }

    public  void getAngelLocation(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.GetAngelLocationReq request,
        com.google.protobuf.RpcCallback<com.tencent.client.master.protos.GetAngelLocationResp> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(2),
        controller,
        request,
        com.tencent.client.master.protos.GetAngelLocationResp.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.tencent.client.master.protos.GetAngelLocationResp.class,
          com.tencent.client.master.protos.GetAngelLocationResp.getDefaultInstance()));
    }

    public  void heartBeat(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.HeartBeatReq request,
        com.google.protobuf.RpcCallback<com.tencent.client.master.protos.HeartBeatResp> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(3),
        controller,
        request,
        com.tencent.client.master.protos.HeartBeatResp.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.tencent.client.master.protos.HeartBeatResp.class,
          com.tencent.client.master.protos.HeartBeatResp.getDefaultInstance()));
    }

    public  void sync(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.SyncReq request,
        com.google.protobuf.RpcCallback<com.tencent.client.master.protos.SyncResp> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(4),
        controller,
        request,
        com.tencent.client.master.protos.SyncResp.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.tencent.client.master.protos.SyncResp.class,
          com.tencent.client.master.protos.SyncResp.getDefaultInstance()));
    }
  }

  public static BlockingInterface newBlockingStub(
      com.google.protobuf.BlockingRpcChannel channel) {
    return new BlockingStub(channel);
  }

  public interface BlockingInterface {
    public com.tencent.client.master.protos.RegisterResp register(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.RegisterReq request)
        throws com.google.protobuf.ServiceException;

    public com.tencent.client.master.protos.SetAngelLocationResp setAngelLocation(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.SetAngelLocationReq request)
        throws com.google.protobuf.ServiceException;

    public com.tencent.client.master.protos.GetAngelLocationResp getAngelLocation(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.GetAngelLocationReq request)
        throws com.google.protobuf.ServiceException;

    public com.tencent.client.master.protos.HeartBeatResp heartBeat(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.HeartBeatReq request)
        throws com.google.protobuf.ServiceException;

    public com.tencent.client.master.protos.SyncResp sync(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.SyncReq request)
        throws com.google.protobuf.ServiceException;
  }

  private static final class BlockingStub implements BlockingInterface {
    private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
      this.channel = channel;
    }

    private final com.google.protobuf.BlockingRpcChannel channel;

    public com.tencent.client.master.protos.RegisterResp register(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.RegisterReq request)
        throws com.google.protobuf.ServiceException {
      return (com.tencent.client.master.protos.RegisterResp) channel.callBlockingMethod(
        getDescriptor().getMethods().get(0),
        controller,
        request,
        com.tencent.client.master.protos.RegisterResp.getDefaultInstance());
    }


    public com.tencent.client.master.protos.SetAngelLocationResp setAngelLocation(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.SetAngelLocationReq request)
        throws com.google.protobuf.ServiceException {
      return (com.tencent.client.master.protos.SetAngelLocationResp) channel.callBlockingMethod(
        getDescriptor().getMethods().get(1),
        controller,
        request,
        com.tencent.client.master.protos.SetAngelLocationResp.getDefaultInstance());
    }


    public com.tencent.client.master.protos.GetAngelLocationResp getAngelLocation(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.GetAngelLocationReq request)
        throws com.google.protobuf.ServiceException {
      return (com.tencent.client.master.protos.GetAngelLocationResp) channel.callBlockingMethod(
        getDescriptor().getMethods().get(2),
        controller,
        request,
        com.tencent.client.master.protos.GetAngelLocationResp.getDefaultInstance());
    }


    public com.tencent.client.master.protos.HeartBeatResp heartBeat(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.HeartBeatReq request)
        throws com.google.protobuf.ServiceException {
      return (com.tencent.client.master.protos.HeartBeatResp) channel.callBlockingMethod(
        getDescriptor().getMethods().get(3),
        controller,
        request,
        com.tencent.client.master.protos.HeartBeatResp.getDefaultInstance());
    }


    public com.tencent.client.master.protos.SyncResp sync(
        com.google.protobuf.RpcController controller,
        com.tencent.client.master.protos.SyncReq request)
        throws com.google.protobuf.ServiceException {
      return (com.tencent.client.master.protos.SyncResp) channel.callBlockingMethod(
        getDescriptor().getMethods().get(4),
        controller,
        request,
        com.tencent.client.master.protos.SyncResp.getDefaultInstance());
    }

  }

  // @@protoc_insertion_point(class_scope:ClientMaster.AngelCleintMaster)
}

